@model IEnumerable<Face.EntidadesDeNegocio.Horarios>
@using Face.EntidadesDeNegocio

@{
    ViewData["Title"] = "Horarios";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Empleados> empleados = ViewBag.Empleados as List<Empleados>;
}

<h1>Horarios</h1>

<p>
    <a asp-action="Create">Crear Nuevo Horario</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmpleadosId)</th>
            <th>@Html.DisplayNameFor(model => model.HoraEntrada)</th>
            <th>@Html.DisplayNameFor(model => model.HoraSalida)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && empleados != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @empleados.FirstOrDefault(e => e.Id == item.EmpleadosId)?.Nombre
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.HoraEntrada)</td>
                    <td>@Html.DisplayFor(modelItem => item.HoraSalida)</td>
                    <td>
                        @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4">No se encontraron horarios o empleados.</td>
            </tr>
        }
    </tbody>
</table>
