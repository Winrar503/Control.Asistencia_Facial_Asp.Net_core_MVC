 @model IEnumerable<Face.EntidadesDeNegocio.Cargo>
<link rel="stylesheet" href="/css/cargo.css">

<div class="container py-5">
    <!-- Título y botón para crear -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary fw-bold">Gestión de Cargos</h1>
        <a asp-action="Crear" class="btn btn-success btn-lg rounded-pill shadow">
            <i class="fas fa-plus me-2"></i> Crear Nuevo Cargo
        </a>
    </div>
    <!-- Barra de búsqueda y acciones adicionales -->
    <div class="d-flex flex-wrap mb-4 gap-3">
        <input type="text" id="buscarCargo" class="form-control shadow-sm rounded-pill flex-grow-1" placeholder="Buscar por nombre...">
        <button class="btn btn-primary rounded-pill shadow" id="exportarCargos">
            <i class="fas fa-file-export me-2"></i> Exportar CSV
        </button>
        <button class="btn btn-warning rounded-pill shadow" id="importarCargos">
            <i class="fas fa-file-import me-2"></i> Importar CSV
        </button>
        <button class="btn btn-info rounded-pill shadow" id="generarReporte">
            <i class="fas fa-chart-bar me-2"></i> Generar Reporte
        </button>
    </div>
    <!-- Tabla de cargos -->
    <div class="table-responsive rounded shadow-sm">
        <table class="table table-bordered align-middle table-hover">
            <thead class="table-primary text-center">
                <tr>

                    <th>Nombre</th>
                    <th>Fecha de Creación</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="tablaCargos">
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="4" class="text-center text-muted">No hay cargos registrados.</td>
                    </tr>
                }
                else
                {
                    @foreach (var cargo in Model)
                    {
                        <tr id="filaCargo-@cargo.Id">
                            <td>@cargo.Nombre</td>
                            <td>@cargo.FechaCreacion.ToString("dd/MM/yyyy")</td>
                            <td class="text-center">
                                <button class="btn btn-danger btn-sm rounded-pill shadow-sm"
                                        onclick="abrirModalEliminar(@cargo.Id, '@cargo.Nombre', '@cargo.FechaCreacion.ToString("dd/MM/yyyy")')">
                                    <i class="fas fa-trash me-1"></i> Eliminar
                                </button>

                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <!-- Modal de Confirmación para Eliminar -->
    <div class="modal fade" id="modalEliminarCargo" tabindex="-1" aria-labelledby="modalEliminarCargoLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow-lg rounded-2xl">
                <div class="modal-body text-center p-4 flex flex-col items-center">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         class="w-12 h-12 flex items-center text-black mx-auto"
                         viewBox="0 0 20 20"
                         fill="currentColor">
                        <path fill-rule="evenodd"
                              d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                              clip-rule="evenodd"></path>
                    </svg>
                    <h2 class="text-xl font-bold py-4 text-black">¿Estás seguro?</h2>
                    <p class="text-sm text-black px-4">
                        ¿Realmente deseas eliminar este cargo? Esta acción no se puede deshacer.
                    </p>
                </div>
                <div class="p-2 mt-2 text-center space-x-1">
                    <button class="btn-cancelar mb-2 px-5 py-2 text-sm shadow-sm font-medium tracking-wider rounded-full hover:shadow-lg transition ease-in duration-300"
                            data-bs-dismiss="modal">
                        Cancelar
                    </button>
                    <button id="confirmarEliminar"
                            class="btn-confirmar px-5 py-2 text-sm shadow-sm font-medium tracking-wider rounded-full hover:shadow-lg transition ease-in duration-300">
                        Confirmar
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!-- Paginación -->
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <a class="page-link rounded-pill shadow-sm">Anterior</a>
            </li>
            <li class="page-item"><a class="page-link rounded-pill shadow-sm" href="#">1</a></li>
            <li class="page-item"><a class="page-link rounded-pill shadow-sm" href="#">2</a></li>
            <li class="page-item"><a class="page-link rounded-pill shadow-sm" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link rounded-pill shadow-sm" href="#">Siguiente</a>
            </li>
        </ul>
    </nav>
    <div id="successMessage" class="success-container d-none">
        <div class="success-content">
            <div class="success-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <h2 class="success-title">¡Eliminado con éxito!</h2>
            <p class="success-message">El cargo ha sido eliminado correctamente.</p>
        </div>
    </div>
</div>
<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Poppins', sans-serif;
    }

    h1 {
        font-weight: bold;
        color: #333;
    }
    .btn-lg {
        font-size: 1.2rem;
        font-weight: bold;
        transition: transform 0.2s ease-in-out;
    }
        .btn-lg:hover {
            transform: scale(1.05);
        }
    .btn-sm {
        font-size: 0.9rem;
        font-weight: bold;
        transition: all 0.3s ease-in-out;
    }
        .btn-sm:hover {
            transform: scale(1.1);
        }
    .table {
        border-collapse: collapse;
        margin-bottom: 1rem;
        background: #fff;
    }
    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }
    .table-bordered th,
    .table-bordered td {
        border: 1px solid #dee2e6;
    }
    .pagination .page-link {
        font-weight: bold;
        color: #007bff;
        border: none;
        transition: all 0.3s ease-in-out;
    }
        .pagination .page-link:hover {
            background-color: #007bff;
            color: white;
        }
</style>
<script>
    let cargoSeleccionado = null;
    function abrirModalEliminar(id) {
      cargoSeleccionado = id;
      const modal = new bootstrap.Modal(document.getElementById('modalEliminarCargo'));
      modal.show();
    }
    document.getElementById('confirmarEliminar').addEventListener('click', async function () {
      if (cargoSeleccionado) {
        try {
          const response = await fetch(`/Cargos/DeleteConfirmed/${cargoSeleccionado}`, {
            method: 'POST',
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
            },
          });
          const result = await response.json();
          if (result.success) {
            document.querySelector(`#filaCargo-${cargoSeleccionado}`).remove();
            mostrarMensajeExito();
            const modal = bootstrap.Modal.getInstance(document.getElementById('modalEliminarCargo'));
            modal.hide();
          } else {
            alert(`Error: ${result.message}`);
            console.error(result.details || 'No hay detalles adicionales del error.');
          }
        } catch (error) {
          console.error('Error al intentar eliminar el cargo:', error);
          alert('Hubo un problema al intentar eliminar el cargo.');
        }
      }
    });
    function mostrarMensajeExito() {
      const messageCard = document.getElementById('successMessage');
      messageCard.classList.remove('d-none');
      setTimeout(() => {
        messageCard.classList.add('d-none');
      }, 3000);
    }
    const cargosPorPagina = 5;
    let paginaActual = 1;
    const tablaCargos = document.querySelector('#tablaCargos');
    const filas = Array.from(tablaCargos.querySelectorAll('tr'));
    function mostrarPagina(pagina) {
        filas.forEach(fila => (fila.style.display = 'none'));
        const inicio = (pagina - 1) * cargosPorPagina;
        const fin = inicio + cargosPorPagina;

        filas.slice(inicio, fin).forEach(fila => {
            fila.style.display = '';
        });
        actualizarPaginacion();
    }
    function actualizarPaginacion() {
        const totalPaginas = Math.ceil(filas.length / cargosPorPagina);
        const paginacion = document.querySelector('.pagination');
        paginacion.innerHTML = '';
        const botonAnterior = document.createElement('li');
        botonAnterior.className = `page-item ${paginaActual === 1 ? 'disabled' : ''}`;
        botonAnterior.innerHTML = `<a class="page-link rounded-pill shadow-sm">Anterior</a>`;
        botonAnterior.addEventListener('click', () => {
            if (paginaActual > 1) {
                paginaActual--;
                mostrarPagina(paginaActual);
            }
        });
        paginacion.appendChild(botonAnterior);
        for (let i = 1; i <= totalPaginas; i++) {
            const botonPagina = document.createElement('li');
            botonPagina.className = `page-item ${paginaActual === i ? 'active' : ''}`;
            botonPagina.innerHTML = `<a class="page-link rounded-pill shadow-sm">${i}</a>`;
            botonPagina.addEventListener('click', () => {
                paginaActual = i;
                mostrarPagina(paginaActual);
            });
            paginacion.appendChild(botonPagina);
        }
        const botonSiguiente = document.createElement('li');
        botonSiguiente.className = `page-item ${paginaActual === totalPaginas ? 'disabled' : ''}`;
        botonSiguiente.innerHTML = `<a class="page-link rounded-pill shadow-sm">Siguiente</a>`;
        botonSiguiente.addEventListener('click', () => {
            if (paginaActual < totalPaginas) {
                paginaActual++;
                mostrarPagina(paginaActual);
            }
        });
        paginacion.appendChild(botonSiguiente);
    }
    document.addEventListener('DOMContentLoaded', () => {
        mostrarPagina(1);
    });

</script>
