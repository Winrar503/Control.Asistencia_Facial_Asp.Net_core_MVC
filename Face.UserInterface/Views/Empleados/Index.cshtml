@model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio
@{
    ViewData["Title"] = "Gestión de Talento";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />

<div class="container-fluid py-5">
    <!-- Encabezado -->
    <header class="text-center mb-5">
        <h1 class="display-4 fw-bold text-gradient mb-2">Gestión de Talento</h1>
        <p class="lead text-muted">Optimiza tu equipo con nuestra plataforma de gestión avanzada</p>
    </header>

    <!-- Panel de control -->
    <div class="row g-4 mb-5">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-users fa-3x text-primary mb-3"></i>
                    <h5 class="card-title">Total Empleados</h5>
                    <p class="card-text display-6 fw-bold">@Model.Count()</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-user-check fa-3x text-success mb-3"></i>
                    <h5 class="card-title">Empleados Activos</h5>
                    <p class="card-text display-6 fw-bold">@Model.Count(e => e.Estado)</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-user-clock fa-3x text-warning mb-3"></i>
                    <h5 class="card-title">Promedio de Edad</h5>
                    <p class="card-text display-6 fw-bold">
                        @(Model.Any() ? Math.Round(Model.Average(e => e.Edad)) : 0)
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-briefcase fa-3x text-info mb-3"></i>
                    <h5 class="card-title">Cargos Únicos</h5>
                  @*   <p class="card-text display-6 fw-bold">
                        @(Model.Any() ? Model.Select(e => e.Cargo).Distinct().Count() : 0)
                    </p> *@
                </div>
            </div>
        </div>
    </div>

    <!-- Barra de búsqueda y botón de acción -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <form asp-action="Index" method="get" class="search-form d-flex flex-grow-1 me-3">
            <div class="input-group">
                <span class="input-group-text bg-transparent border-0">
                    <i class="fas fa-search text-muted"></i>
                </span>
                <input type="text" class="form-control form-control-lg border-0 shadow-none" id="searchTitle" name="searchTitle" placeholder="Buscar por nombre, cargo o email..." />
            </div>
            <button type="submit" class="btn btn-primary btn-lg ms-3 px-4 rounded-pill">
                Buscar
            </button>
        </form>
        <a asp-action="Crear" class="btn btn-success btn-lg rounded-pill">
            <i class="fas fa-user-plus me-2"></i> Nuevo Empleado
        </a>
    </div>

    <!-- Tabla de empleados -->
    <div class="card shadow-sm rounded-3 overflow-hidden">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead>
                        <tr class="bg-light">
                            <th class="py-3 px-4">Empleado</th>
                            <th class="py-3 px-4">Cargo</th>
                            <th class="py-3 px-4">Contacto</th>
                            <th class="py-3 px-4">Estado</th>
                            <th class="py-3 px-4">Fecha de Ingreso</th>
                            <th class="py-3 px-4 text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                <tr class="hover-row">
                                    <td class="py-3 px-4">
                                        <div class="d-flex align-items-center">
                                            @{
                                                string imageSrc = "/images/default-profile.png";
                                                if (item.Fotos != null && item.Fotos.Any(f => f.Foto != null))
                                                {
                                                    var foto = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                                                    if (foto != null && foto.Foto.Length > 0)
                                                    {
                                                        string imageBase64 = Convert.ToBase64String(foto.Foto);
                                                        imageSrc = $"data:image/png;base64,{imageBase64}";
                                                    }
                                                }
                                            }
                                            <img src="@imageSrc" alt="Foto de @item.Nombre" class="rounded-circle me-3" style="width: 48px; height: 48px; object-fit: cover;" />
                                            <div>
                                                <h6 class="fw-semibold mb-0">@item.Nombre</h6>
                                                <small class="text-muted">@item.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                   @*  <td class="py-3 px-4">
                                        <span class="badge bg-light text-dark">@item.Cargo</span>
                                    </td> *@
                                    <td class="py-3 px-4">
                                        <div>@item.Telefono</div>
                                        <small class="text-muted">@item.Edad años</small>
                                    </td>
                                    <td class="py-3 px-4">
                                        <span class="badge rounded-pill @(item.Estado ? "bg-success-subtle text-success" : "bg-danger-subtle text-danger")">
                                            @(item.Estado ? "Activo" : "Inactivo")
                                        </span>
                                    </td>
                                    <td class="py-3 px-4">@item.FechaRegistro.ToString("dd MMM, yyyy")</td>
                                    <td class="py-3 px-4">
                                        <div class="d-flex justify-content-center">
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary mx-1" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info mx-1" title="Detalles">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger mx-1" title="Eliminar">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                            <a asp-action="CapturarFotos" asp-route-empleadoId="@item.Id" class="btn btn-sm btn-outline-secondary mx-1" title="Capturar Fotos">
                                                <i class="fas fa-camera"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center py-4">No hay empleados registrados.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
        color: #333;
    }

    .text-gradient {
        background: linear-gradient(120deg, #1a237e, #4a148c);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .hover-row:hover {
        background-color: #f8f9fa;
        transition: 0.3s;
    }
</style>





@* @model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio
<link rel="stylesheet" href="~/css/empleado/index.css" />

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Reportes> reportes = ViewBag.Reportes as List<Reportes>;
    List<Asistencias> asistencias = ViewBag.Asistencias as List<Asistencias>;
    List<Horarios> horarios = ViewBag.Horarios as List<Horarios>;
}

<h1 class="display-4 text-primary text-center mb-4">Gestión de Empleados</h1>

<div class="container mb-4">
    <div class="row justify-content-between align-items-center">
        <form asp-action="Index" method="get" class="col-md-6 d-flex">
            <input type="text" class="form-control me-2" id="searchTitle" name="searchTitle" placeholder="Buscar por empleado..." />
            <button type="submit" class="btn btn-outline-info">Buscar</button>
        </form>
        <div class="col-md-6 text-end">
            <a asp-action="Crear" class="btn btn-primary">+ Nuevo empleado</a>
        </div>
    </div>
</div>

<table class="table table-striped table-hover align-middle shadow-sm rounded">
    <thead class="table-light">
        <tr>
            <th>Foto de Perfil</th>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Edad)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Cargo)</th>
            <th>@Html.DisplayNameFor(model => model.Telefono)</th>
            <th>@Html.DisplayNameFor(model => model.Estado)</th>
            <th>@Html.DisplayNameFor(model => model.FechaRegistro)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string imageSrc = "/images/default-profile.png";

                        if (item.Fotos != null)
                        {
                            var fotoCentro = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                            if (fotoCentro != null && fotoCentro.Foto != null && fotoCentro.Foto.Length > 0)
                            {
                                string imageBase64 = Convert.ToBase64String(fotoCentro.Foto);
                                imageSrc = $"data:image/png;base64,{imageBase64}";
                            }
                        }
                    }
                    <img src="@imageSrc" alt="Foto de perfil" class="rounded-circle border border-primary" width="50" height="50" />
                </td>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.Edad)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Cargo)</td>
                <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
                <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                <td>@Html.DisplayFor(modelItem => item.FechaRegistro)</td>
                <td>
                    <div class="btn-group" role="group">
                        @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info btn-sm" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                        @Html.ActionLink("Capturar Fotos", "CapturarFotos", new { empleadoId = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (numPage > 1)
{
    <div class="d-flex justify-content-center my-4">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#">Anterior</a>
            </li>
            @for (var i = 1; i <= numPage; i++)
            {
                <li class="page-item @(i == 1 ? "active" : "")"><a class="page-link" href="#">@i</a></li>
            }
            <li class="page-item">
                <a class="page-link" href="#">Siguiente</a>
            </li>
        </ul>
    </div>
} *@