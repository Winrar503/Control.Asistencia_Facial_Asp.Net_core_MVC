@model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio

@{
    ViewData["Title"] = "Gestión de Talento";
    var cargos = ViewBag.Cargos as List<Cargo>;
    int cargoSeleccionado = ViewBag.CargoSeleccionado ?? 0;
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />

<div class="container-fluid py-5">

    <header class="text-center mb-5">
        <h1 class="display-4 fw-bold text-gradient mb-2">Gestión de Empleado</h1>
        <p class="lead text-muted">Optimiza tu equipo de trabajo</p>
    </header>


    <div class="row g-4 mb-5">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-users fa-3x text-primary mb-3"></i>
                    <h5 class="card-title">Total Empleados</h5>
                    <p class="card-text display-6 fw-bold">@Model.Count()</p>
                </div>
            </div>
        </div>
       @*  <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-user-check fa-3x text-success mb-3"></i>
                    <h5 class="card-title">Empleados Activos</h5>
                    <p class="card-text display-6 fw-bold">@Model.Count(e => e.Estado)</p>
                </div>
            </div>
        </div> *@
        <div class="col-md-3">
            <div class="card border-0 shadow-sm card-hover" onclick="abrirModalEstado()" style="cursor: pointer;">
                <div class="card-body text-center">
                    <i class="fas fa-user-check fa-3x text-success mb-3"></i>
                    <h5 class="card-title">Empleados Activos</h5>
                    <p class="card-text display-6 fw-bold">@Model.Count(e => e.Estado)</p>
                </div>
            </div>
        </div>
     
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-user-clock fa-3x text-warning mb-3"></i>
                    <h5 class="card-title">Promedio de Edad</h5>
                    <p class="card-text display-6 fw-bold">
                        @(Model.Any() ? Math.Round(Model.Average(e => e.Edad)) : 0)
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm  card-hover">
                <a asp-controller="Cargos" asp-action="Index" class="text-decoration-none">
                    <div class="card-body text-center">
                        <i class="fas fa-briefcase fa-3x text-info mb-3"></i>
                        <h5 class="card-title">Cargos Únicos</h5>
                        <p class="card-text display-6 fw-bold">@ViewBag.TotalCargos</p>
                    </div>
                </a>
            </div>
        </div>
    </div>


    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="dropdown">
            <button class="btn btn-outline-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                @if (cargoSeleccionado == 0)
                {
                    @:Todos los Empleados
                }
                else
                {
                    @(cargos?.FirstOrDefault(c => c.Id == cargoSeleccionado)?.Nombre ?? "Seleccionar Cargo")
                }
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <li>
                    <a class="dropdown-item @(cargoSeleccionado == 0 ? "active" : "")" asp-action="Index" asp-route-cargoId="0">
                        Todos los Empleados
                    </a>
                </li>
                @if (cargos != null)
                {
                    foreach (var cargo in cargos)
                    {
                        <li>
                            <a class="dropdown-item @(cargoSeleccionado == cargo.Id ? "active" : "")" asp-action="Index" asp-route-cargoId="@cargo.Id">
                                @cargo.Nombre
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

        <form asp-action="Index" method="get" class="search-form d-flex flex-grow-1 ms-3">
            <div class="input-group">
                <span class="input-group-text bg-transparent border-0">
                    <i class="fas fa-search text-muted"></i>
                </span>
                <input type="text" class="form-control form-control-lg border-0 shadow-none" id="searchTitle" name="searchTitle" placeholder="Buscar por nombre, cargo o email..." />
            </div>
            <button type="submit" class="btn btn-primary btn-lg ms-3 px-4 rounded-pill">
                Buscar
            </button>
        </form>


        <a asp-action="Crear" class="btn btn-success btn-lg rounded-pill ms-3">
            <i class="fas fa-user-plus me-2"></i> Nuevo Empleado
        </a>
    </div>


    <div class="card shadow-sm rounded-3 overflow-hidden">
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr class="bg-light">
                                <th class="py-3 px-4">Nombre</th>
                                <th class="py-3 px-4">Cargo</th>
                                <th class="py-3 px-4">Contacto</th>
                                <th class="py-3 px-4">Estado</th>
                                <th class="py-3 px-4">Ingreso</th>
                                <th class="py-3 px-4 text-center">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr id="filaEmpleado-@item.Id" class="hover-row">
                                    <td class="py-3 px-4">
                                        <div class="d-flex align-items-center">
                                            @{
                                                string imageSrc = "/images/default-profile.png";
                                                if (item.Fotos != null && item.Fotos.Any(f => f.Foto != null))
                                                {
                                                    var foto = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                                                    if (foto != null && foto.Foto.Length > 0)
                                                    {
                                                        string imageBase64 = Convert.ToBase64String(foto.Foto);
                                                        imageSrc = $"data:image/png;base64,{imageBase64}";
                                                    }
                                                }
                                            }
                                            <img src="@imageSrc" alt="Foto de @item.Nombre" class="rounded-circle me-3" style="width: 48px; height: 48px; object-fit: cover;" />
                                            <div>
                                                <h6 class="fw-semibold mb-0">@item.Nombre</h6>
                                                <small class="text-muted">@item.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-3 px-4">
                                        <span class="badge bg-light text-dark">@item.Cargo?.Nombre</span>
                                    </td>
                                    <td class="py-3 px-4">@item.Telefono</td>


                                    <td class="py-3 px-4">
                                        <span class="badge rounded-pill @(item.Estado ? "bg-success-subtle text-success" : "bg-danger-subtle text-danger")">
                                            @(item.Estado ? "Activo" : "Inactivo")
                                        </span>
                                    </td>


                                    <td class="py-3 px-4">@item.FechaRegistro.ToString("dd MMM, yyyy")</td>
                                    <td class="py-3 px-4">
                                        <div class="d-flex justify-content-center">
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary mx-1" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>



                                            <button class="btn btn-sm btn-outline-info mx-1" title="Detalles" onclick="abrirModalDetalles(@item.Id)">
                                                <i class="fas fa-eye"></i>
                                            </button>




                                            <a asp-action="CapturarFotos" asp-route-empleadoId="@item.Id" class="btn btn-sm btn-outline-secondary mx-1" title="Capturar Fotos">
                                                <i class="fas fa-camera"></i>
                                            </a>
                                            <a asp-controller="Reportes" asp-action="Index" asp-route-empleadoId="@item.Id" class="btn btn-sm btn-outline-warning mx-1" title="Ver Reportes">
                                                <i class="fas fa-file-alt"></i>
                                            </a>
                                            <button onclick="abrirModalEliminar(@item.Id)" class="btn btn-sm btn-outline-danger mx-1" title="Eliminar">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>



                        <!-- Modal para Detalles del Empleado -->
                        <div class="modal fade" id="detallesModal" tabindex="-1" aria-labelledby="detallesModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered modal-lg">
                                <div class="modal-content" id="modalDraggable">
                                    <div class="modal-header bg-primary text-white">
                                        <h5 class="modal-title" id="detallesModalLabel">Detalles del Empleado</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <!-- Contenido del modal -->
                                        <div id="detallesContenido" class="text-center">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Cargando...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>



                        <!-- Modal para empleados activos/inactivos -->
                        <div class="modal fade" id="modalEstadoEmpleados" tabindex="-1" aria-labelledby="modalEstadoEmpleadosLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content" id="modalDraggable">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="modalEstadoEmpleadosLabel">Estado de Empleados</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h6>Empleados Activos</h6>
                                                <ul class="list-group">
                                                    @foreach (var item in Model.Where(e => e.Estado))
                                                    {
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            @item.Nombre
                                                            <span class="badge bg-success">Activo</span>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                            <div class="col-md-6">
                                                <h6>Empleados Inactivos</h6>
                                                <ul class="list-group">
                                                    @foreach (var item in Model.Where(e => !e.Estado))
                                                    {
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            @item.Nombre
                                                            <span class="badge bg-danger">Inactivo</span>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <!-- Modal de Confirmación -->
                        <div class="modal fade" id="modalEliminarEmpleado" tabindex="-1" aria-labelledby="modalEliminarEmpleadoLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content shadow-lg rounded-2xl">
                                    <div class="modal-body text-center p-4">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-red-600 mx-auto" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                        </svg>
                                        <h2 class="text-xl font-bold py-4">¿Estás seguro?</h2>
                                        <p class="text-sm text-gray-700 px-4">¿Realmente deseas eliminar este Empleado? Esta acción no se puede deshacer.</p>
                                    </div>
                                    <div class="p-4 text-center space-x-2">
                                        <button class="px-4 py-2 bg-gray-200 text-gray-600 rounded-full" data-bs-dismiss="modal">Cancelar</button>
                                        <button id="confirmarEliminarEmpleado" class="px-4 py-2 bg-red-600 text-white rounded-full">Eliminar</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Mensaje de Éxito -->
                        <div id="successMessage" class="alert alert-success alert-dismissible fade show d-none position-fixed top-0 start-50 translate-middle-x mt-3" style="z-index: 1050;" role="alert">
                            <strong>¡Éxito!</strong> El empleado se eliminó correctamente.
                            <button type="button" class="btn-close" onclick="ocultarMensaje()" aria-label="Close"></button>
                        </div>

                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <h5>No hay empleados registrados para este cargo.</h5>
                </div>
            }
        </div>
    </div>
</div>
<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
        color: #333;
    }

    .text-gradient {
        background: linear-gradient(120deg, #1a237e, #4a148c);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .hover-row:hover {
        background-color: #f8f9fa;
        transition: 0.3s;
    }
   /*  .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }

    .pagination .page-item .page-link {
        color: #0d6efd;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
    } */

    .card-hover {
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .card-hover:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
</style>

<script>
           // Función para abrir el modal con detalles del empleado
    function abrirModalDetalles(id) {
        // Mostrar un spinner de carga
        document.getElementById("detallesContenido").innerHTML = `
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>
        `;

        // Realizar la petición al servidor usando AJAX
        fetch(`/Empleados/Details/${id}`)
            .then(response => response.json())
            .then(data => {
                // Construir el contenido del modal
                document.getElementById("detallesContenido").innerHTML = `
                    <div class="text-center mb-3">
                        <img src="data:image/jpeg;base64,${data.foto}"
                             class="rounded-circle shadow"
                             style="width: 100px; height: 100px; object-fit: cover;" />
                        <h4 class="fw-bold mt-3">${data.nombre}</h4>
                        <p class="text-muted">${data.cargo}</p>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item"><strong>Email:</strong> ${data.email}</li>
                        <li class="list-group-item"><strong>Teléfono:</strong> ${data.telefono}</li>
                        <li class="list-group-item"><strong>Edad:</strong> ${data.edad} años</li>
                        <li class="list-group-item"><strong>Estado:</strong> ${data.estado}</li>
                        <li class="list-group-item"><strong>Fecha de Registro:</strong> ${data.fechaRegistro}</li>
                    </ul>
                `;
            })
            .catch(error => {
                console.error("Error al cargar detalles:", error);
                document.getElementById("detallesContenido").innerHTML = "<p class='text-danger'>Error al cargar los detalles.</p>";
            });

        // Mostrar el modal
        var modal = new bootstrap.Modal(document.getElementById("detallesModal"));
        modal.show();
        hacerModalArrastrable(); // Habilitar arrastre
    }

    // Función para hacer el modal arrastrable
    function hacerModalArrastrable() {
        const modal = document.getElementById("modalDraggable");
        let offsetX = 0, offsetY = 0, isDragging = false;

        modal.addEventListener("mousedown", (e) => {
            isDragging = true;
            offsetX = e.clientX - modal.getBoundingClientRect().left;
            offsetY = e.clientY - modal.getBoundingClientRect().top;
            modal.style.position = "absolute";
            modal.style.zIndex = 1055; // Asegurar que esté visible
        });

        document.addEventListener("mousemove", (e) => {
            if (isDragging) {
                modal.style.left = `${e.clientX - offsetX}px`;
                modal.style.top = `${e.clientY - offsetY}px`;
            }
        });

        document.addEventListener("mouseup", () => {
            isDragging = false;
        });
    }






     function abrirModalEstado() {
        const modal = new bootstrap.Modal(document.getElementById('modalEstadoEmpleados'));
        modal.show();
    }

    // Hacer el modal arrastrable
    const modalDraggable = document.getElementById('modalDraggable');
    let isDragging = false;
    let offsetX = 0;
    let offsetY = 0;

    modalDraggable.addEventListener('mousedown', function (e) {
        isDragging = true;
        offsetX = e.clientX - modalDraggable.getBoundingClientRect().left;
        offsetY = e.clientY - modalDraggable.getBoundingClientRect().top;
        modalDraggable.style.position = 'absolute';
        modalDraggable.style.zIndex = '1055'; // Asegurarse de que esté encima
        document.addEventListener('mousemove', moveModal);
    });

    document.addEventListener('mouseup', function () {
        if (isDragging) {
            isDragging = false;
            document.removeEventListener('mousemove', moveModal);
        }
    });

    function moveModal(e) {
        if (isDragging) {
            modalDraggable.style.left = `${e.clientX - offsetX}px`;
            modalDraggable.style.top = `${e.clientY - offsetY}px`;
        }
    }


     let empleadoSeleccionado = null;

    function abrirModalEliminar(id) {
        empleadoSeleccionado = id;
        const modal = new bootstrap.Modal(document.getElementById('modalEliminarEmpleado'));
        modal.show();
    }

    document.getElementById('confirmarEliminarEmpleado').addEventListener('click', async function () {
        if (empleadoSeleccionado) {
            try {
                const response = await fetch(`/Empleados/DeleteConfirmed/${empleadoSeleccionado}`, {
                    method: 'POST',
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                });

                const result = await response.json();
                if (result.success) {
                    document.querySelector(`#filaEmpleado-${empleadoSeleccionado}`).remove();
                    mostrarMensajeExito();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalEliminarEmpleado'));
                    modal.hide();
                } else {
                    alert(result.message || 'Error al eliminar el empleado.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Ocurrió un error inesperado.');
            }
        }
    });

    function mostrarMensajeExito() {
        const messageCard = document.getElementById('successMessage');
        messageCard.classList.remove('d-none');
        setTimeout(() => {
            messageCard.classList.add('d-none');
        }, 3000);
    }

    function ocultarMensaje() {
        const messageCard = document.getElementById('successMessage');
        messageCard.classList.add('d-none');
    }
</script>