@model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio
<link rel="stylesheet" href="~/css/empleado/index.css" />

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Reportes> reportes = ViewBag.Reportes as List<Reportes>;
    List<Asistencias> asistencias = ViewBag.Asistencias as List<Asistencias>;
    List<Horarios> horarios = ViewBag.Horarios as List<Horarios>;
}

<h1 class="display-4 text-primary text-center mb-4">Gestión de Empleados</h1>

<div class="container mb-4">
    <div class="row justify-content-between align-items-center">
        <form asp-action="Index" method="get" class="col-md-6 d-flex">
            <input type="text" class="form-control me-2" id="searchTitle" name="searchTitle" placeholder="Buscar por empleado..." />
            <button type="submit" class="btn btn-outline-info">Buscar</button>
        </form>
        <div class="col-md-6 text-end">
            <a asp-action="Crear" class="btn btn-primary">+ Nuevo empleado</a>
        </div>
    </div>
</div>

<table class="table table-striped table-hover align-middle shadow-sm rounded">
    <thead class="table-light">
        <tr>
            <th>Foto de Perfil</th>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Edad)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Cargo)</th>
            <th>@Html.DisplayNameFor(model => model.Telefono)</th>
            <th>@Html.DisplayNameFor(model => model.Estado)</th>
            <th>@Html.DisplayNameFor(model => model.FechaRegistro)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string imageSrc = "/images/default-profile.png";

                        if (item.Fotos != null)
                        {
                            var fotoCentro = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                            if (fotoCentro != null && fotoCentro.Foto != null && fotoCentro.Foto.Length > 0)
                            {
                                string imageBase64 = Convert.ToBase64String(fotoCentro.Foto);
                                imageSrc = $"data:image/png;base64,{imageBase64}";
                            }
                        }
                    }
                    <img src="@imageSrc" alt="Foto de perfil" class="rounded-circle border border-primary" width="50" height="50" />
                </td>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.Edad)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Cargo)</td>
                <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
                <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                <td>@Html.DisplayFor(modelItem => item.FechaRegistro)</td>
                <td>
                    <div class="btn-group" role="group">
                        @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info btn-sm" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                        @Html.ActionLink("Capturar Fotos", "CapturarFotos", new { empleadoId = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (numPage > 1)
{
    <div class="d-flex justify-content-center my-4">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#">Anterior</a>
            </li>
            @for (var i = 1; i <= numPage; i++)
            {
                <li class="page-item @(i == 1 ? "active" : "")"><a class="page-link" href="#">@i</a></li>
            }
            <li class="page-item">
                <a class="page-link" href="#">Siguiente</a>
            </li>
        </ul>
    </div>
}