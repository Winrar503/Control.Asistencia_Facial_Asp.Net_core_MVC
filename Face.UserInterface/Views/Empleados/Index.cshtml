@model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />

@{
    ViewData["Title"] = "Gestión de Empleados";
}

<div class="container-fluid my-5">
    <!-- Título -->
    <div class="text-center mb-5">
        <h1 class="display-3 fw-bold text-gradient">Gestión de Empleados</h1>
        <p class="fs-5 text-muted">Administra empleados, sus detalles y realiza acciones rápidas</p>
    </div>

    <!-- Barra de búsqueda y acciones -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <form asp-action="Index" method="get" class="d-flex w-75">
            <input type="text" class="form-control me-3 shadow-sm" id="searchTitle" name="searchTitle" placeholder="🔍 Buscar empleado por nombre, cargo o email..." />
            <button type="submit" class="btn btn-primary shadow">
                <i class="fas fa-search"></i> Buscar
            </button>
        </form>
        <a asp-action="Crear" class="btn btn-success btn-lg shadow">
            <i class="fas fa-user-plus"></i> Nuevo Empleado
        </a>
    </div>

    <!-- Tabla de empleados -->
    <div class="table-responsive shadow-lg rounded-4 bg-white">
        <table class="table table-borderless table-hover align-middle">
            <thead class="table-dark text-center text-uppercase">
                <tr>
                    <th class="p-3">Foto</th>
                    <th class="p-3">Nombre</th>
                    <th class="p-3">Edad</th>
                    <th class="p-3">Email</th>
                    <th class="p-3">Cargo</th>
                    <th class="p-3">Teléfono</th>
                    <th class="p-3">Estado</th>
                    <th class="p-3">Fecha de Registro</th>
                    <th class="p-3">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td class="p-3">
                            @{
                                string imageSrc = "/images/default-profile.png";
                                if (item.Fotos != null && item.Fotos.Any(f => f.Foto != null))
                                {
                                    var foto = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                                    if (foto != null && foto.Foto.Length > 0)
                                    {
                                        string imageBase64 = Convert.ToBase64String(foto.Foto);
                                        imageSrc = $"data:image/png;base64,{imageBase64}";
                                    }
                                }
                            }
                            <img src="@imageSrc" alt="Foto de perfil" class="rounded-circle shadow-sm border" style="width: 50px; height: 50px;" />
                        </td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Nombre)</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Edad)</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Email)</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Cargo)</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Telefono)</td>
                        <td class="p-3">
                            <span class="badge rounded-pill @(item.Estado ? "bg-success" : "bg-danger")">
                                @(item.Estado ? "Activo" : "Inactivo")
                            </span>
                        </td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.FechaRegistro)</td>
                        <td class="p-3">
                            <div class="d-flex justify-content-center">
                                @Html.ActionLink("", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm me-2", @title = "Modificar", innerHTML = "<i class='fas fa-edit'></i>" })
                                @Html.ActionLink("", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm me-2", @title = "Detalles", innerHTML = "<i class='fas fa-eye'></i>" })
                                @Html.ActionLink("", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm me-2", @title = "Eliminar", innerHTML = "<i class='fas fa-trash'></i>" })
                                @Html.ActionLink("", "CapturarFotos", new { empleadoId = item.Id }, new { @class = "btn btn-outline-info btn-sm", @title = "Capturar Fotos", innerHTML = "<i class='fas fa-camera'></i>" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    <nav aria-label="Paginación" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled"><a class="page-link">Anterior</a></li>
            <li class="page-item active"><a class="page-link">1</a></li>
            <li class="page-item"><a class="page-link">2</a></li>
            <li class="page-item"><a class="page-link">3</a></li>
            <li class="page-item"><a class="page-link">Siguiente</a></li>
        </ul>
    </nav>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(120deg, #f8f9fa, #e9ecef);
    }

    .text-gradient {
        background: linear-gradient(90deg, #4facfe, #00f2fe);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .table-borderless tbody tr:hover {
        background-color: #f1f3f5;
        transition: background-color 0.2s ease-in-out;
    }

    .btn {
        font-weight: 600;
        border-radius: 30px;
    }

    .badge {
        font-size: 0.85rem;
        padding: 10px 15px;
        font-weight: 600;
    }

    .pagination .page-link {
        border: none;
        color: #007bff;
        border-radius: 30px;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        color: white;
    }
</style>

@* @model IEnumerable<Face.EntidadesDeNegocio.Empleados>
@using Face.EntidadesDeNegocio
<link rel="stylesheet" href="~/css/empleado/index.css" />

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Reportes> reportes = ViewBag.Reportes as List<Reportes>;
    List<Asistencias> asistencias = ViewBag.Asistencias as List<Asistencias>;
    List<Horarios> horarios = ViewBag.Horarios as List<Horarios>;
}

<h1 class="display-4 text-primary text-center mb-4">Gestión de Empleados</h1>

<div class="container mb-4">
    <div class="row justify-content-between align-items-center">
        <form asp-action="Index" method="get" class="col-md-6 d-flex">
            <input type="text" class="form-control me-2" id="searchTitle" name="searchTitle" placeholder="Buscar por empleado..." />
            <button type="submit" class="btn btn-outline-info">Buscar</button>
        </form>
        <div class="col-md-6 text-end">
            <a asp-action="Crear" class="btn btn-primary">+ Nuevo empleado</a>
        </div>
    </div>
</div>

<table class="table table-striped table-hover align-middle shadow-sm rounded">
    <thead class="table-light">
        <tr>
            <th>Foto de Perfil</th>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Edad)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Cargo)</th>
            <th>@Html.DisplayNameFor(model => model.Telefono)</th>
            <th>@Html.DisplayNameFor(model => model.Estado)</th>
            <th>@Html.DisplayNameFor(model => model.FechaRegistro)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string imageSrc = "/images/default-profile.png";

                        if (item.Fotos != null)
                        {
                            var fotoCentro = item.Fotos.FirstOrDefault(f => f.NombreFoto == "centro");
                            if (fotoCentro != null && fotoCentro.Foto != null && fotoCentro.Foto.Length > 0)
                            {
                                string imageBase64 = Convert.ToBase64String(fotoCentro.Foto);
                                imageSrc = $"data:image/png;base64,{imageBase64}";
                            }
                        }
                    }
                    <img src="@imageSrc" alt="Foto de perfil" class="rounded-circle border border-primary" width="50" height="50" />
                </td>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.Edad)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Cargo)</td>
                <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
                <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                <td>@Html.DisplayFor(modelItem => item.FechaRegistro)</td>
                <td>
                    <div class="btn-group" role="group">
                        @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info btn-sm" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                        @Html.ActionLink("Capturar Fotos", "CapturarFotos", new { empleadoId = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (numPage > 1)
{
    <div class="d-flex justify-content-center my-4">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#">Anterior</a>
            </li>
            @for (var i = 1; i <= numPage; i++)
            {
                <li class="page-item @(i == 1 ? "active" : "")"><a class="page-link" href="#">@i</a></li>
            }
            <li class="page-item">
                <a class="page-link" href="#">Siguiente</a>
            </li>
        </ul>
    </div>
} *@