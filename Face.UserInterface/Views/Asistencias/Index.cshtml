@* @model IEnumerable<Face.EntidadesDeNegocio.Asistencias>
@using Face.EntidadesDeNegocio

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Empleados> empleados = ViewBag.Empleados as List<Empleados>;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmpleadosId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comentarios)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tipo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstadoReconocimiento)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmpleadosId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comentarios)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstadoReconocimiento)
            </td>
                <td>
                    @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info" })
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                </td>
        </tr>
}
    </tbody>
</table>
@if (numPage > 1)
{
    <div class="row" style="overflow:auto">
        <div class="col-md-12">
            <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Previous</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Next</a></li>
            </ul>
        </div>
    </div>
} *@
@model IEnumerable<Face.EntidadesDeNegocio.Asistencias>
@using Face.EntidadesDeNegocio

@{
    ViewData["Title"] = "Gestión de Asistencias";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Empleados> empleados = ViewBag.Empleados as List<Empleados>;
}

<div class="container py-5">
    <!-- Encabezado -->
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-gradient">Gestión de Asistencias</h1>
        <p class="fs-5 text-muted">Consulta, administra y gestiona las asistencias de los empleados</p>
    </div>

    <!-- Botón de crear nueva asistencia -->
    <div class="mb-4 text-end">
        <a asp-action="Create" class="btn btn-success btn-lg shadow">
            <i class="fas fa-plus-circle"></i> Crear Nueva Asistencia
        </a>
    </div>

    <!-- Tabla -->
    <div class="table-responsive shadow-lg rounded-4 bg-white">
        <table class="table table-hover align-middle">
            <thead class="bg-gradient-light text-uppercase text-center">
                <tr>
                    <th class="p-3">Empleado</th>
                    <th class="p-3">Comentarios</th>
                    <th class="p-3">Fecha</th>
                    <th class="p-3">Tipo</th>
                    <th class="p-3">Estado</th>
                    <th class="p-3">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var empleado = empleados?.FirstOrDefault(e => e.Id == item.EmpleadosId)?.Nombre ?? "Desconocido";
                    <tr class="text-center">
                        <td class="p-3">@empleado</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Comentarios)</td>
                        <td class="p-3">@Html.DisplayFor(modelItem => item.Fecha)</td>
                        <td class="p-3">
                            <span class="badge rounded-pill bg-info text-dark">
                                @Html.DisplayFor(modelItem => item.Tipo)
                            </span>
                        </td>
                        <td class="p-3">
                            <span class="badge rounded-pill @(item.EstadoReconocimiento == "Exitoso" ? "bg-success" : "bg-danger")">
                                @Html.DisplayFor(modelItem => item.EstadoReconocimiento)
                            </span>
                        </td>
                        <td class="p-3">
                            <div class="d-flex justify-content-center gap-2">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Editar">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Eliminar">
                                    <i class="fas fa-trash-alt"></i> Eliminar
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @if (numPage > 1)
    {
        <nav aria-label="Paginación" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item"><a class="page-link" href="#">Anterior</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item @(i == 1 ? "active" : "")"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item"><a class="page-link" href="#">Siguiente</a></li>
            </ul>
        </nav>
    }
</div>

<!-- Estilos -->
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #F8F9FA;
        color: #333333;
    }

    .text-gradient {
        background: linear-gradient(90deg, #A9CDE8, #D5E8F6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .table-hover tbody tr:hover {
        background-color: #F1F3F5;
        transition: background-color 0.2s ease-in-out;
    }

    .badge {
        font-size: 0.9rem;
        font-weight: 600;
    }

    .btn {
        font-weight: 600;
        border-radius: 30px;
    }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: white;
        }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }

    .bg-gradient-light {
        background: linear-gradient(to right, #DDEAFD, #FFFFFF);
    }

    .table thead th {
        border-bottom: 2px solid #DADADA;
    }

    .table-responsive {
        background: #FFFFFF;
        padding: 20px;
        border-radius: 15px;
    }

    .pagination .page-link {
        border: none;
        color: #007bff;
        border-radius: 30px;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        color: white;
    }
</style>
