@* @model IEnumerable<Face.EntidadesDeNegocio.Asistencias>
@using Face.EntidadesDeNegocio
@{
    ViewData["Title"] = "Gestión de Asistencias";
    List<Empleados> empleados = ViewBag.Empleados as List<Empleados>;
}

<div class="min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">

        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 sm:text-4xl">Asistencias</h1>
            <p class="mt-2 text-sm text-gray-700">gestiona las asistencias de los empleados</p>
        </div>
        <div class="mb-6">
            <a asp-action="Create" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                Crear Nueva Asistencia
            </a>
        </div>
        <div class="bg-white shadow overflow-hidden sm:rounded-lg">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Empleado
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Comentarios
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Fecha
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Tipo
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Horas Extras
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Estado
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Acciones
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @if (Model != null && empleados != null)
                    {
                        @foreach (var item in Model)
                        {
                            var empleado = empleados?.FirstOrDefault(e => e.Id == item.EmpleadosId)?.Nombre ?? "Desconocido";
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@empleado</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@Html.DisplayFor(modelItem => item.Comentarios)</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@Html.DisplayFor(modelItem => item.Fecha)</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                        @Html.DisplayFor(modelItem => item.Tipo)
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (item.HorasExtras.HasValue && item.HorasExtras > 0)
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            @item.HorasExtras.Value.ToString("F2") hrs
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">N/A</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(item.EstadoReconocimiento == "Exitoso" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                        @Html.DisplayFor(modelItem => item.EstadoReconocimiento)
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="text-red-600 hover:text-red-900">
                                        Eliminar
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                                No se encontraron asistencias o empleados.
                            </td>
                        </tr>
                    }
                </tbody>
                <!-- Modal de Confirmación para Eliminar -->
                <div class="modal fade" id="modalEliminarAsistencia" tabindex="-1" aria-labelledby="modalEliminarAsistenciaLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content shadow-lg rounded-2xl">
                            <div class="modal-body text-center p-4">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-red-600 mx-auto" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                                <h2 class="text-xl font-bold py-4">¿Estás seguro?</h2>
                                <p class="text-sm text-gray-700 px-4">Esta acción no se puede deshacer.</p>
                            </div>
                            <div class="p-4 text-center space-x-2">
                                <button class="btn-cancelar px-4 py-2 bg-gray-200 text-gray-600 rounded-full" data-bs-dismiss="modal">Cancelar</button>
                                <button id="confirmarEliminarAsistencia" class="px-4 py-2 bg-red-600 text-white rounded-full">Eliminar</button>
                            </div>
                        </div>
                    </div>
                </div>

            </table>
        </div>
        <!-- Pagination Placeholder -->
        <div class="mt-6">
            <nav class="flex items-center justify-between border-t border-gray-200 px-4 sm:px-0">
            </nav>
        </div>
    </div>
</div>
<script>
    let asistenciaSeleccionada = null;

    function abrirModalEliminar(id) {
        asistenciaSeleccionada = id;
        const modal = new bootstrap.Modal(document.getElementById('modalEliminarAsistencia'));
        modal.show();
    }

    document.getElementById('confirmarEliminarAsistencia').addEventListener('click', async function () {
        if (asistenciaSeleccionada) {
            try {
                const response = await fetch(`/Asistencias/DeleteConfirmed/${asistenciaSeleccionada}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                });
                const result = await response.json();
                if (result.success) {
                    document.querySelector(`#filaAsistencia-${asistenciaSeleccionada}`).remove();
                    mostrarMensajeExito();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalEliminarAsistencia'));
                    modal.hide();
                } else {
                    alert(result.message || 'Error al eliminar la asistencia.');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    });

    function mostrarMensajeExito() {
        const messageCard = document.getElementById('successMessage');
        messageCard.classList.remove('d-none');
        setTimeout(() => {
            messageCard.classList.add('d-none');
        }, 3000);
    }
</script>
 *@
 @model IEnumerable<Face.EntidadesDeNegocio.Asistencias>
@using Face.EntidadesDeNegocio
@{
    ViewData["Title"] = "Gestión de Asistencias";
    List<Empleados> empleados = ViewBag.Empleados as List<Empleados>;
}

<div class="min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">

        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 sm:text-4xl">Asistencias</h1>
            <p class="mt-2 text-sm text-gray-700">Gestiona las asistencias de los empleados</p>
        </div>

        <div class="mb-6">
            <a asp-action="Create" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                Crear Nueva Asistencia
            </a>
        </div>

        <div class="bg-white shadow overflow-hidden sm:rounded-lg">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Empleado</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Comentarios</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipo</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Horas Extras</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @if (Model != null && empleados != null)
                    {
                        @foreach (var item in Model)
                        {
                            var empleado = empleados?.FirstOrDefault(e => e.Id == item.EmpleadosId)?.Nombre ?? "Desconocido";
                            <tr id="filaAsistencia-@item.Id">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@empleado</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@Html.DisplayFor(modelItem => item.Comentarios)</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@Html.DisplayFor(modelItem => item.Fecha)</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                        @Html.DisplayFor(modelItem => item.Tipo)
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (item.HorasExtras.HasValue && item.HorasExtras > 0)
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            @item.HorasExtras.Value.ToString("F2") hrs
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">N/A</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(item.EstadoReconocimiento == "Exitoso" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                        @Html.DisplayFor(modelItem => item.EstadoReconocimiento)
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <button type="button" onclick="abrirModalEliminar(@item.Id)" class="text-red-600 hover:text-red-900">
                                        Eliminar
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                                No se encontraron asistencias o empleados.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Modal de Confirmación para Eliminar -->
        <div class="modal fade" id="modalEliminarAsistencia" tabindex="-1" aria-labelledby="modalEliminarAsistenciaLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content shadow-lg rounded-2xl">
                    <div class="modal-body text-center p-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-red-600 mx-auto" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                        </svg>
                        <h2 class="text-xl font-bold py-4">¿Estás seguro?</h2>
                        <p class="text-sm text-gray-700 px-4">¿Realmente deseas eliminar esta asistencia? Esta acción no se puede deshacer.</p>
                    </div>
                    <div class="p-4 text-center space-x-2">
                        <button class="btn-cancelar px-4 py-2 bg-gray-200 text-gray-600 rounded-full" data-bs-dismiss="modal">Cancelar</button>
                        <button id="confirmarEliminarAsistencia" class="px-4 py-2 bg-red-600 text-white rounded-full">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Mensaje de Éxito -->
        <div id="successMessage" class="alert alert-success alert-dismissible fade show d-none position-fixed top-0 start-50 translate-middle-x mt-3" style="z-index: 1050;" role="alert">
            <strong>¡Éxito!</strong> La asistencia se eliminó correctamente.
            <button type="button" class="btn-close" onclick="ocultarMensaje()" aria-label="Close"></button>
        </div>
    </div>
</div>

<script>
    let asistenciaSeleccionada = null;

    function abrirModalEliminar(id) {
        asistenciaSeleccionada = id;
        const modal = new bootstrap.Modal(document.getElementById('modalEliminarAsistencia'));
        modal.show();
    }

    document.getElementById('confirmarEliminarAsistencia').addEventListener('click', async function () {
        if (asistenciaSeleccionada) {
            try {
                const response = await fetch(`/Asistencias/DeleteConfirmed/${asistenciaSeleccionada}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                });
                const result = await response.json();
                if (result.success) {
                    document.querySelector(`#filaAsistencia-${asistenciaSeleccionada}`).remove();
                    mostrarMensajeExito();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalEliminarAsistencia'));
                    modal.hide();
                } else {
                    alert(result.message || 'Error al eliminar la asistencia.');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    });

    function mostrarMensajeExito() {
        const messageCard = document.getElementById('successMessage');
        messageCard.classList.remove('d-none');
        setTimeout(() => {
            messageCard.classList.add('d-none');
        }, 3000);
    }

    function ocultarMensaje() {
        const messageCard = document.getElementById('successMessage');
        messageCard.classList.add('d-none');
    }
</script>
